<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com</groupId>
  <artifactId>pollapp</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>PollApp Example Webapp</name>
  <description>A simple PollApp built with AngularJs and SpringMVC</description>
  <url>http://github.com/wanderingivan/pollapp-example</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <springframework.version>4.3.7.RELEASE</springframework.version>
    <springframework.security.version>4.2.2.RELEASE</springframework.security.version>
    <jackson.library>2.8.7</jackson.library>
    <h2.version>1.4.194</h2.version>
  	<mysql.version>5.1.39</mysql.version>
  	<sql.maven.version>1.5</sql.maven.version>
  	<sql.dir>src/main/resources/scripts/sql</sql.dir>
  </properties>
  
  <dependencyManagement>

    <dependencies>
    
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>1.1.13.Final</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    
      <dependency>                                     
        <groupId>org.jboss.arquillian.selenium</groupId>
        <artifactId>selenium-bom</artifactId>
        <version>3.0.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
            
      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-drone-bom</artifactId>
        <version>2.0.1.Final</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

    </dependencies>
    
  </dependencyManagement>

  <dependencies>
  
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        
        <dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-context</artifactId>
            <version>${springframework.version}</version>
		</dependency>
		
       	<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
            <version>${springframework.version}</version>
		</dependency> 
		
  		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-tx</artifactId>
            <version>${springframework.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
            <version>${springframework.version}</version>
		</dependency>
		
		<dependency>
    		<groupId>org.springframework.security</groupId>
    		<artifactId>spring-security-core</artifactId>
    		<version>${springframework.security.version}</version>
		</dependency>
		
		<dependency>
  			<groupId>org.springframework.security</groupId>
  			<artifactId>spring-security-config</artifactId>
    		<version>${springframework.security.version}</version>
  		</dependency>
  		
  		<dependency>
  			<groupId>org.springframework.security</groupId>
  			<artifactId>spring-security-taglibs</artifactId>
    		<version>${springframework.security.version}</version>
  		</dependency>  	
  		
  		<dependency>
  			<groupId>org.springframework.security</groupId>
  			<artifactId>spring-security-web</artifactId>
    		<version>${springframework.security.version}</version>
  		</dependency>
  		
  		<dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.library}</version>
        </dependency>
        
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <version>${jackson.library}</version>
        </dependency>
  		
  		<dependency>
    		<groupId>net.sf.ehcache</groupId>
    		<artifactId>ehcache-core</artifactId>
    		<version>2.6.11</version>
    		<type>jar</type>
    		<scope>compile</scope>
    	</dependency>
  		
 	  	<dependency>
    		<groupId>org.slf4j</groupId>
    		<artifactId>slf4j-log4j12</artifactId>
    		<version>1.6.1</version>
    		<type>jar</type>
    		<scope>compile</scope>
    	</dependency>
    	
  		<dependency>
  			<groupId>log4j</groupId>
  			<artifactId>log4j</artifactId>
  			<version>1.2.17</version>
  		</dependency>

		<dependency>
      		<groupId>com.mchange</groupId>
      		<artifactId>c3p0</artifactId>
      		<version>0.9.5.2</version>
    	</dependency>
    	
    	<!-- DB Connectors -->
    	 
  		<dependency>
  			<groupId>mysql</groupId>
  			<artifactId>mysql-connector-java</artifactId>
  			<version>${mysql.version}</version>
  		</dependency>

        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>${h2.version}</version>
        </dependency>

   		<dependency>
        	<groupId>commons-codec</groupId>
        	<artifactId>commons-codec</artifactId>
        	<version>1.10</version>
    	</dependency>
    	
		<dependency>
    		<groupId>javax.validation</groupId>
    		<artifactId>validation-api</artifactId>
    		<version>1.1.0.Final</version>
		</dependency>
		
		<dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
			<scope>provided</scope>
        </dependency>
        
        <!-- Test dependencies -->

  		<dependency>
    		<groupId>junit</groupId>
    		<artifactId>junit</artifactId>
   	 		<version>4.12</version>
  			<scope>test</scope>
		</dependency>
  		
  		<dependency>
  			<groupId>org.dbunit</groupId>
  			<artifactId>dbunit</artifactId>
  			<version>2.4.7</version>
  			<scope>test</scope>
  		</dependency>
  		
  		<dependency>
  			<groupId>org.mockito</groupId>
  			<artifactId>mockito-all</artifactId>
  			<version>1.10.19</version>
  			<scope>test</scope>
  		</dependency>  				

  		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
            <version>${springframework.version}</version>
  			<scope>test</scope>
  		</dependency>
  		
  		<dependency>
  			<groupId>com.github.springtestdbunit</groupId>
  			<artifactId>spring-test-dbunit</artifactId>
  			<version>1.3.0</version>
  			<scope>test</scope>
		</dependency>  

		<dependency>
    		<groupId>org.springframework.security</groupId>
    		<artifactId>spring-security-test</artifactId>
    		<version>${springframework.security.version}</version>
  			<scope>test</scope>
		</dependency>
		
    	<dependency>
      		<groupId>org.jboss.arquillian.junit</groupId>
      		<artifactId>arquillian-junit-standalone</artifactId>
      		<scope>test</scope>
    	</dependency>
    
    	<dependency>
      		<groupId>org.jboss.arquillian.graphene</groupId>
      		<artifactId>graphene-webdriver</artifactId>
      		<version>2.1.0.Final</version>
      		<type>pom</type>
      		<scope>test</scope>
    	</dependency>
    
    	<dependency>
      		<groupId>xml-apis</groupId>
      		<artifactId>xml-apis</artifactId>
      		<version>1.4.01</version>
      		<scope>test</scope>
		</dependency>		
		
  </dependencies>
  
  <build>
  
    <resources>
      <resource>
        <directory>src/main/resources/</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  
    <plugins>
    
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
    
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <warSourceDirectory>WebContent</warSourceDirectory>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      
      <plugin>
  		<groupId>org.apache.tomcat.maven</groupId>
  		<artifactId>tomcat7-maven-plugin</artifactId>
  		<version>2.2</version>
  		<configuration>
    	  <path>/PollApp</path>
    	  <warSourceDirectory>${basedir}/WebContent/</warSourceDirectory>    	  
  		</configuration>
  		
  		<executions>
      
          <execution>
        
            <id>start-tomcat</id>
      		<phase>pre-integration-test</phase>
      		<goals>
        	  <goal>run</goal>
      		</goals>
      		<configuration>
        	  <fork>true</fork>
      		</configuration>
    	
    	  </execution>
    
    	  <execution>
      	    <id>stop-tomcat</id>
      	    <phase>post-integration-test</phase>
      
            <goals>
              <goal>shutdown</goal>
            </goals>
    	  </execution>
  
  	    </executions>  		
	  </plugin>
	  
	  <plugin>
        
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.12.1</version>
        
        <configuration>
          <excludes>
            <exclude>**/*IT*.*</exclude>
          </excludes>
          <skipTests>${skipUTs}</skipTests>
        
        </configuration>

      </plugin>
      
      <plugin>
        
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.20</version>
        
        <configuration>
          <includes>
            <include>**/*IT*.*</include>
          </includes>
          <testFailureIgnore>${ignore.UT.fail}</testFailureIgnore>
          <skipTests>${skipITs}</skipTests>
        </configuration>

        <executions>
          
          <execution>
            <id>failsafe-integration-tests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          
          <execution>
            <id>failsafe-verify</id>
            <phase>verify</phase>
            <goals>
              <goal>verify</goal>
            </goals>
          
          </execution>
          
        </executions>
        
      </plugin>
	  
    </plugins>
    
    <finalName>PollApp</finalName>
    
  </build>
  
  <profiles>
    
    <profile>
      <id>h2-db</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      
      <properties>
        <db.url>jdbc:h2:file:./target/db/testdb</db.url>
        <db.user>sa</db.user>
        <db.password>sa</db.password>
        <db.driver>org.h2.Driver</db.driver>
      </properties>
      
      <build>
        <plugins>
          <plugin>

            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <version>${sql.maven.version}</version>
            
            <dependencies>
  			  <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
                <scope>runtime</scope>
              </dependency>
            </dependencies> 
            
 			<configuration>
              <driver>${db.driver}</driver>
              <url>${db.url}</url>
    		  <username>${db.user}</username>
    		  <password>${db.password}</password>
    		  <autocommit>true</autocommit>
  		    </configuration>   
  		             
  			<executions>
  			
    		  <execution>
      		    <id>create-db</id>
      		    <phase>process-classes</phase><!-- process-classes instead of install so it is run every time tomcat7:run goal is selected -->
      		    <goals>
        		  <goal>execute</goal>
      		    </goals>
      		    <configuration>
                  <srcFiles>
                    <srcFile>${sql.dir}/create_database.sql</srcFile>
                  </srcFiles>
                  <skip>${build.database.skip}</skip>
                </configuration>
      		  </execution>
 
      		  <execution>
      		  	<id>create-procedures</id>
      		  	<phase>process-classes</phase>
      		    <goals>
        		  <goal>execute</goal>
      		    </goals>
      		    <configuration>
      		      <delimiter>//</delimiter>
                  <srcFiles>
                    <srcFile>${sql.dir}/create_procedures_h2.sql</srcFile>
                  </srcFiles>
                  <skip>${build.database.skip}</skip>
                </configuration>
      		  </execution>
      		  
      		  <execution>
      		  	<id>add-preset-data</id>
      		  	<phase>process-classes</phase>
      		    <goals>
        		  <goal>execute</goal>
      		    </goals>
      		    <configuration>
                  <srcFiles>
                    <srcFile>${sql.dir}/create_preset_db.sql</srcFile>
                  </srcFiles>
                  <skip>${build.preset.skip}</skip>
                </configuration>
      		  </execution>
      		  
      		</executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>mysql-db</id>
     
      <properties>
        <db.url>jdbc:mysql://localhost:3306/PollApp?useSSL=false</db.url>
        <db.user>root</db.user>
        <db.password>password</db.password>
        <db.driver>com.mysql.jdbc.Driver</db.driver>
      </properties> 
      
      <build>
        <plugins>
          <plugin>
          
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <version>${sql.maven.version}</version>
            
            <dependencies>
  	          <dependency>
  			    <groupId>mysql</groupId>
  			    <artifactId>mysql-connector-java</artifactId>
  		        <version>${mysql.version}</version>
  	          </dependency>
            </dependencies>           

            <configuration>
              <driver>${db.driver}</driver>
              <url>${db.url}</url>
    		  <username>${db.user}</username>
    		  <password>${db.password}</password>
    		  <autocommit>true</autocommit>
  		    </configuration> 
            
            <executions>
              <execution>
                <id>create-db</id>
                <phase>process-classes</phase><!-- process-classes instead of install so it is run every time tomcat7:run goal is selected -->
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <url>jdbc:mysql://localhost:3306?useSSL=false</url>
                  <autocommit>true</autocommit>
                  <sqlCommand>create database if not exists PollApp</sqlCommand>
                  <skip>${build.database.skip}</skip>
                </configuration>
              </execution>
              
              <execution>
                <id>create-schema</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <url>${db.url}</url>
                  <autocommit>true</autocommit>
                  <srcFiles>
                    <srcFile>${sql.dir}/create_database.sql</srcFile>
                  </srcFiles>
                  <skip>${build.database.skip}</skip>
                </configuration>
              </execution>
              
              <execution>
                <id>create-procedures</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <url>${db.url}</url>
                  <delimiter>//</delimiter>
                  <autocommit>true</autocommit>
                  <srcFiles>
                    <srcFile>${sql.dir}/create_procedures_mysql.sql</srcFile>
                  </srcFiles>
                  <skip>${build.database.skip}</skip>
                </configuration>
              </execution>
              
              <execution>
                <id>add-preset-data</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <url>${db.url}</url>
                  <autocommit>true</autocommit>
                  <srcFiles>
                    <srcFile>${sql.dir}/create_preset_db.sql</srcFile>
                  </srcFiles>
                  <skip>${build.database.skip}</skip>
                  <skip>${build.preset.skip}</skip>
                </configuration>
              </execution>            
              
            </executions>
            
          </plugin>
        </plugins>
      </build>
    
    </profile>    
    
  </profiles>
  
</project>
